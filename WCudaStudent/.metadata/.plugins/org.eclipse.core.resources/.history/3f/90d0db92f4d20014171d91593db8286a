#ifndef RAYTRACING_H_
#define RAYTRACING_H_

#include "cudaTools.h"
#include "Animable_I.h"
#include "MathTools.h"
#include "../device/math/Sphere.h"
#include "ConstantMemoryLink.h"


/*----------------------------------------------------------------------*\
 |*			Declaration 					*|
 \*---------------------------------------------------------------------*/

/*--------------------------------------*\
 |*		Public			*|
 \*-------------------------------------*/

class RayTracing: public Animable_I
    {
	/*--------------------------------------*\
	|*		Constructor		*|
	 \*-------------------------------------*/

    public:

	RayTracing(int w, int h, float dt);
	 Sphere* instanciateSpheres(Sphere*,int);
	//void destructSpheres(Sphere*);
	virtual ~RayTracing(void);

	/*--------------------------------------*\
	 |*		Methodes		*|
	 \*-------------------------------------*/

    public:

	/*----------------*\
	|*  Override	  *|
	 \*---------------*/

	virtual void animationStep(void);

	virtual void process(uchar4* ptrDevPixels, int w, int h);
	virtual float getAnimationPara();

	virtual int getW(void);
	virtual int getH(void);
	virtual float getT(void);
	virtual string getTitle(void);

	static float randomMinMax(float min, float max);

    private:

	/*--------------------------------------*\
	 |*		Attributs		*|
	 \*-------------------------------------*/

    private:

	// Inputs
	int w;
	int h;
	float t; // para animation
	float dt; // para animation
	Sphere* ptrSpheres;
	Sphere* ptrDevSpheres;

	// Tools
	dim3 dg;
	dim3 db;

	//Outputs
	string title;
    };

#endif

/*----------------------------------------------------------------------*\
 |*			End	 					*|
 \*---------------------------------------------------------------------*/
