#include "Device.h"
#include <iostream>
#include "MathTools.h"
#include "cudaTools.h"

__global__ void saucisson(float* ptrDevPI, long nsaucisson);
__device__ void reduction (float* tabSM, int n);
__device__ void ecrasement(float* tabSM, int moitie);

/**
* Hyp : dimension(ptrDevPI) est une puissance de 2
**/
__global__ void saucisson(float* ptrDevPI, long nsaucisson)
   {

   }

__device__ void reduction (float* tabSM, int n)
    {
	int moitie = n/2;
	while(moitie >=1)
	    {
		ecrasement(tabSM, moitie);
		moitie = moitie /2;
		__synchronize();
	    }
    }

__device__ void ecrasement(float* tabSM, int moitie)
    {
	const int tidLocal = Indice2D::tidLocal();
	const int NB_THREAD_LOCAL = Indice2D::nbThreadBlock();

	int s  = tidLocal;

	while(s < moitie)
	    {
		tabSM[s]+= tabSM[s + moitie];
		s += NB_THREAD_LOCAL;
	    }
    }
