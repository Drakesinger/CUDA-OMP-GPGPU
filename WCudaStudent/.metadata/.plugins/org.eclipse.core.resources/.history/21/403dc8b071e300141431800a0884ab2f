#include "Device.h"
#include <iostream>
#include "MathTools.h"
#include "cudaTools.h"
#include "saucissonSMHost.h"

extern __device__ void saucisson(float* ptrDevPI, long c);

saucissonSMHost::saucissonSMHost(long n)
    {
	this->n = n;

    	this->resultatThe = PI;
    	this->retultatPI = 0;

    	this->dg = dim3(256, 1, 1);
	this->db = dim3(256, 1, 1);

	this->sizeOctetPI = sizeof(float);

	HANDLE_ERROR(cudaMalloc(&ptrDevPI, this->sizeOctetPI));
	HANDLE_ERROR(cudaMemset(ptrDevPI,0,sizeOctetPI));
    }

saucissonSMHost::~saucissonSMHost()
    {
	HANDLE_ERROR(cudaFree(ptrDevPI));
    }

bool saucissonSMHost::isOk()
    {
    if (this->retultatPI == this->resultatThe)
	{
	return 1;
	}

    return 0;
    }
/**
 * Override
 */
void saucissonSMHost::process()
    {
    saucisson<<<this->dg, this->db>>>(this->ptrDevPI, this->n);
    HANDLE_ERROR(cudaMemcpy(&retultatPI,this->ptrDevPI, this->sizeOctetPI, cudaMemcpyDeviceToHost));
    }
