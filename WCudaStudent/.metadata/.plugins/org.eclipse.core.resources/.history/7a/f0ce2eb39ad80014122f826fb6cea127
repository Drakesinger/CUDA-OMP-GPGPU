#ifndef HEATTRANSFERT_H_
#define HEATFRANSFERT_H_

#include "cudaTools.h"
#include "Animable_I.h"
#include "MathTools.h"
#include "../device/math/Sphere.h"
#include "CalibreurF.h"


/*----------------------------------------------------------------------*\
 |*			Declaration 					*|
 \*---------------------------------------------------------------------*/

/*--------------------------------------*\
 |*		Public			*|
 \*-------------------------------------*/

class HeatTransfert: public Animable_I
    {
	/*--------------------------------------*\
	|*		Constructor		*|
	 \*-------------------------------------*/

    public:

	HeatTransfert(int w, int h, int iterations, float k);
	virtual ~HeatTransfert(void);

	/*--------------------------------------*\
	 |*		Methodes		*|
	 \*-------------------------------------*/

    public:

	/*----------------*\
	|*  Override	  *|
	 \*---------------*/

	virtual void animationStep(void);

	virtual void process(uchar4* ptrDevPixels, int w, int h);
	virtual float getAnimationPara();

	void initTab(float* ptrTab,int w,int h);
	void remplir(float* ptrTab, int x, int y, int x2, int y2, float value,int w,int h);
	void startHeatEcrasement(float* ptrDevImage, float* ptrDevHeater, int w, int h);
	void startHeatImageHSB(float* ptrDevIn, uchar4* ptrDevOut, CalibreurF& calibreur, int w, int h);
	void startHeatDiffusion(float* ptrDevIn, float* ptrDevOut, float k, int w, int h);

	virtual int getW(void);
	virtual int getH(void);
	virtual float getT(void);
	virtual string getTitle(void);

	static float randomMinMax(float min, float max);

    private:

	/*--------------------------------------*\
	 |*		Attributs		*|
	 \*-------------------------------------*/

    private:

	// Inputs
	int w;
	int h;
	float t; // para animation
	float dt; // para animation
	float k;

	float* ptrTabHeater;
	float size;
	float* ptrDevTabHeater;
	float* ptrDevImgA;
	float* ptrDevImgB;

	int nbBlindIteration;
	int nbIterations;

	CalibreurF calibreur;

	bool isPair;

	// Tools
	dim3 dg;
	dim3 db;

	//Outputs
	string title;
    };

#endif

/*----------------------------------------------------------------------*\
 |*			End	 					*|
 \*---------------------------------------------------------------------*/
